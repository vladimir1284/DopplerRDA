#include <vcl.h>
#include <stdio.h>
#include <fastmath.h>
#include <exception>
#include <iostream>
#include <vcl.h>
#include <mem.h>
#pragma hdrstop

#include "IntegratedData.h"
#include "DataParameters.h"

IntegratedData::IntegratedData(int Sectors, int Cells, int ReqElev, int ReqSpeed, int Mode){
  NRays          = Sectors;
  NBins          = Cells;
  RequestedElev  = ReqElev;
  RequestedSpeed = ReqSpeed;
  DataMode       = Mode;

  ProcessedCount = 0;
  Error = false;

  try {
	 TheRawStuff.dBZData  = AllocMem(NRays * NBins * sizeof(float));
	 TheRawStuff.CIData   = AllocMem(NRays * NBins * sizeof(float));
	 TheRawStuff.VData    = AllocMem(NRays * NBins * sizeof(float));
	 TheRawStuff.WData    = AllocMem(NRays * NBins * sizeof(float));
	 TheRawStuff.SQIData  = AllocMem(NRays * NBins * sizeof(float));

	 TheRawStuff.Azimuth   = AllocMem(NRays * sizeof(short));
	 TheRawStuff.Elevation = AllocMem(NRays * sizeof(short));
  }
  catch(std::bad_alloc) {
    exit(-1);
  }

  BinLength = (DataMode == LP_MODE) ? BIN_LENGTH_LP : BIN_LENGTH_SP;

  StartDateTime = time(NULL);
}

IntegratedData::~IntegratedData(){
	FreeMemory(TheRawStuff.dBZData);
	FreeMemory(TheRawStuff.SQIData);
	FreeMemory(TheRawStuff.CIData);
	FreeMemory(TheRawStuff.VData);
	FreeMemory(TheRawStuff.WData);

	FreeMemory(TheRawStuff.Azimuth);
	FreeMemory(TheRawStuff.Elevation);
}




