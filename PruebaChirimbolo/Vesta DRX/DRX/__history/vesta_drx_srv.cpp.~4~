#include <SysUtils.hpp>
#include <SvcMgr.hpp>
#include <IniFiles.hpp>
#pragma hdrstop
#define Application Svcmgr::Application
USEFORM("Service_DRX.cpp", DRX_srv); /* TService: File Type */
//---------------------------------------------------------------------------
WINAPI WinMain(HINSTANCE, HINSTANCE, LPSTR, int)
{
	try
	{
		HANDLE CurrentProcess = GetCurrentProcess();
		SetPriorityClass(CurrentProcess, REALTIME_PRIORITY_CLASS);

		String configFileName = ExtractFileDir(ParamStr(0)) + "\\Config.ini";
		TIniFile* config = new TIniFile(configFileName);
		__try{
			if(config != NULL){
				MinWorkingSetSize := Setup.ReadInteger( MemoryKey, MinWorkingSetSizeValue, MinWorkingSetSizeDefault ) * $100000;
				MaxWorkingSetSize := Setup.ReadInteger( MemoryKey, MaxWorkingSetSizeValue, MaxWorkingSetSizeDefault ) * $100000;
			}
			else{
				MinWorkingSetSize := MinWorkingSetSizeDefault * $100000;
				MaxWorkingSetSize := MaxWorkingSetSizeDefault * $100000;
			}
		}
		__finally{
			config->Free();
		}


		SetProcessWorkingSetSize(CurrentProcess, MinWorkingSetSize, MaxWorkingSetSize );

		if ((!Application->DelayInitialize) || (Application->Installing()))
		{
			Application->Initialize();
		}
		Application->CreateForm(__classid(TDRX_srv), &DRX_srv);
		Application->Run();
	}
	catch (Exception &exception)
	{
		Sysutils::ShowException(&exception, System::ExceptAddr());
	}
        catch(...)
        {
		try
		{
	        	throw Exception("");
		}
		catch(Exception &exception)
		{
			Sysutils::ShowException(&exception, System::ExceptAddr());
		}
        }
	return 0;
}
