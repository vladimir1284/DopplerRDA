//---------------------------------------------------------------------------

#ifndef DataSenderContextH
#define DataSenderContextH
//---------------------------------------------------------------------------
#include "DataParameters.h"
#include "heapi.h"

#include <Classes.hpp>
#include <IdCmdTCPServer.hpp>
#include <IdContext.hpp>
#include <SyncObjs.hpp>
#include <Contnrs.hpp>
#include <Math.hpp>

//---------------------------------------------------------------------------

class DRX_Data_Package{
private:
	short  _DataType;
	short  _NData;
	short* _data;

public:
	__property short DataType = { read= _DataType, write= _DataType};
	__property short NData    = { read= _NData, write= _NData};
	__property short* Data    = { read= _data, write= _data};

	DRX_Data_Package(){
		_DataType = 0;
		_NData = 0;

		_data = NULL;
	}

	~DRX_Data_Package(){
		if(_data != NULL)
			delete[] _data;
	}

	void InitMsg(short msg, short NData, HE_PINT32BUFFER Data){
		_DataType = msg;
		_NData = NData;

		_data  = new short[NData];
		for(int i=0; i<NData; i++){
			_data[i] = Data[i] & 0xFFFF;
		}
	}

	void InitMsg(short msg, short NData, float *Data){
		_DataType = msg;
		_NData = NData;

		_data  = new short[NData];
		for(int i=0; i<NData; i++){
			_data[i] = Floor(Data[i]);
		}
	}
};

//---------------------------------------------------------------------------

class TDataSenderContext : public TIdContext
{
private:
	TCriticalSection* lock;
    TQueue* packages;
protected:
	void __fastcall BeforeRun(void);
	bool __fastcall Run(void);
	void __fastcall AfterRun(void);
public:
	__fastcall TDataSenderContext(Idtcpconnection::TIdTCPConnection* AConnection, Idyarn::TIdYarn* AYarn, Classes::TThreadList* AList);
	__fastcall ~TDataSenderContext(void);

	void SendDataPackage(short MsgType, short NData, HE_PINT32BUFFER Data);
	void SendDataPackage(short MsgType, short NData, float *Data);
};
//---------------------------------------------------------------------------

extern TIdCmdTCPServer* theDataSenderServer;

void Send_Data(short msg, short NData, HE_PINT32BUFFER Data);
void Send_Data(short msg, short NData, float *Data);

//---------------------------------------------------------------------------
#endif
