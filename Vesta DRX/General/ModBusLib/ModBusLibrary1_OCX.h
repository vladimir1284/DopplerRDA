// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// $Rev: 16580 $
// File generated on 5/4/2018 1:57:18 AM from Type Library described below.

// ************************************************************************  //
// Type Lib: C:\Documents and Settings\ldt\Escritorio\TestModBusC++ 1\ModBusLibrary1.tlb (1)
// LIBID: {F34F72CD-D52F-4DBF-B9E1-370EBBE3C4DB}
// LCID: 0
// Helpfile: 
// HelpString: 
// DepndLst: 
//   (1) v2.0 stdole, (C:\WINDOWS\system32\stdole2.tlb)
//   (2) v2.4 mscorlib, (C:\WINDOWS\Microsoft.NET\Framework\v4.0.30319\mscorlib.tlb)
// ************************************************************************ //
#ifndef   ModBusLibrary1_OCXH
#define   ModBusLibrary1_OCXH

#pragma option push -b -a4 -w-inl

#include <olectrls.hpp>
#include <oleserver.hpp>
#if !defined(__UTILCLS_H)
#include <utilcls.h>
#endif
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0700)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <stdvcl.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>
#include "mscorlib_TLB.h"

#include "ModBusLibrary1_TLB.h"
namespace Modbuslibrary1_tlb
{

// *********************************************************************//
// HelpString: 
// Version:    1.0
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TModLib
// Help String      : 
// Default Interface: IModLib
// Def. Intf. Object: IModLibPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TModLib : public Oleserver::TOleServer
{
  IModLibPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TModLib(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IModLibPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IModLibPtr intf);


  double          __fastcall Sumar(long a/*[in]*/, long b/*[in]*/);
  long            __fastcall ConfMod(long iCom/*[in]*/, long iAddr/*[in]*/, long iStart/*[in]*/, 
                                     long iLength/*[in]*/, VARIANT_BOOL bRegister/*[in]*/);
  VARIANT_BOOL    __fastcall WriteBit(long module/*[in]*/, long bit/*[in]*/, 
                                      VARIANT_BOOL state/*[in]*/);
  VARIANT_BOOL    __fastcall WriteCode(long module/*[in]*/, long channel/*[in]*/, long code/*[in]*/);
  long            __fastcall OpenComPort(void);
  LPSAFEARRAY     __fastcall DataGet(void);
};

};     // namespace Modbuslibrary1_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Modbuslibrary1_tlb;
#endif

#pragma option pop

#endif // ModBusLibrary1_OCXH
