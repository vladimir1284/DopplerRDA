//---------------------------------------------------------------------------
#define Hunt

#include <vcl.h>
#include <math.h>
#include <hesl.h>

#include "Site.h"
#include "AFCprocessor.h"
#include "ProcessingThread.h"

#pragma hdrstop

//---------------------------------------------------------------------------

USEFORM("ShellChirimbolo.cpp", Form1);
//---------------------------------------------------------------------------
#pragma link "WebReq.obj"
#pragma link "SockAppHlpr.obj"
#pragma link "IndySystem.lib"
#pragma link "IndyCore.lib"

//---------------------------------------------------------------------------

Site 				*ThisSite;
ProcessingThread    *TheProcessingThread;
AFCProcessingThread *TheACFProcessingThread;

/*

type        The type of mathematical error that occurred; an enum type defined in the typedef _mexcep (see definition after this list).
name        A pointer to a null-terminated string holding the name of the math library function that resulted in an error.
arg1, arg2  The arguments (passed to the function that name points to) caused the error; if only one argument was passed to the function, it is stored in arg1.
retval      The default return value for _matherr (or _matherrl); you can modify this value.

DOMAIN    Argument was not in domain of function, such as log(-1).
SING      Argument would result in a singularity, such as pow(0, -2).
OVERFLOW  Argument would produce a function result greater than DBL_MAX (or LDBL_MAX), such as exp(1000).
UNDERFLOW Argument would produce a function result less than DBL_MIN (or LDBL_MIN), such as exp(-1000).
TLOSS     Argument would produce function result with total loss of significant digits, such as sin(10e70).

*/

int _matherr(struct _exception* error)
{
	if(strcmp(error->name, "log10") == 0) {
		error->retval = 0;
		return 1;
	}

	return 0;
}

WINAPI WinMain(HINSTANCE, HINSTANCE, LPSTR, int)
{
	try
	{
		SetPriorityClass(GetCurrentProcess(), REALTIME_PRIORITY_CLASS);
		Application->Initialize();

#ifdef Hunt
		hesl sl;
		String heartFileName = ExtractFileDir(ParamStr(0)) + "\\Config\\Heart.net";

		sl.serverloader("-rla", "G:\\Work\\Doppler RDA\\Deploy\\Config\\Heart.net");
#endif

		ThisSite = new Site();

		Application->Title = "Cyclops-Chirimbolo";
		SetApplicationMainFormOnTaskBar(Application, true);
		Application->CreateForm(__classid(TForm1), &Form1);
		TheACFProcessingThread = new AFCProcessingThread(true);
		TheProcessingThread    = new ProcessingThread(true);

		TheACFProcessingThread->Resume();
		TheProcessingThread->Resume();
		ThisSite->TheRadar->Resume();

		Application->Run();
	}
	catch (Exception &exception){
		Application->ShowException(&exception);
	}
	return 0;
}
//---------------------------------------------------------------------------
