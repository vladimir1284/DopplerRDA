-- ==============================================================
-- FILE : HE_DAC.VHD  -  DO NOT EDIT THIS FILE
-- ==============================================================
--
-- This file is part of the Hardware Interface Layer (H.I.L) of
-- your project when using your HERON-IO4 module.
--
-- This file must NOT be modified by users of the Module.
--
-- ==============================================================
--
--  Module      : HE_DAC
--  Date        : 04/03/2002
--  Author      : R. Williams - HUNT ENGINEERING
--  Description : DAC interface, same for the A and B channels
--
-- ==============================================================
--
--  Ver     Modified By      Date      Changes
--  ---     -----------      ----      -------
--  1.0     R. Williams    04-03-02    First Written
--  1.1     R. Williams    08-05-02    Syntax change made to all
--                                     instanciated components,
--                                     (changed '0' to GND)
--                                     for compatibility with
--                                     ModelSim5.5b.
--  2.0     R. Williams    26-11-02    New components added for
--                                     interfacing to all six HERON
--                                     input FIFOs and all six HERON
--                                     output FIFOs at the same time.
--                                     Added component HE_RD_6F in
--                                     place of component HE_RD_1F.
--                                     Added component HE_WR_6F in
--                                     place of component HE_WR_1F.
--  2.1     R. Williams    20-01-03    Changes made to the HSB
--                                     mastering functions, and 
--                                     additional registering added
--                                     to the AE flag to ensure
--                                     correct reading from HEPC8s.
--
-- ==============================================================


library IEEE;
  use IEEE.std_logic_1164.all;

-- synopsys translate_off
library UNISIM;
  use UNISIM.vcomponents.all;
-- synopsys translate_on

entity HE_DAC is
  port (
    -- External PADS
    WRT  : out std_logic;
    CLK  : out std_logic;
    DAC  : out std_logic_vector(13 downto 0);
    -- Module I/Os
    SCLK : in  std_logic;
    DATA : in  std_logic_vector(13 downto 0)
  );
end HE_DAC;


architecture RTL of HE_DAC is

  component FD
    port(
      Q   : out std_logic;
      D   : in  std_logic;
      C   : in  std_logic );
  end component;

  -- Note : attributes on instance are supported by all synthesis tools.

  attribute IOB     : string;

  attribute IOB of iDA0  : label is "TRUE";
  attribute IOB of iDA1  : label is "TRUE";
  attribute IOB of iDA2  : label is "TRUE";
  attribute IOB of iDA3  : label is "TRUE";
  attribute IOB of iDA4  : label is "TRUE";
  attribute IOB of iDA5  : label is "TRUE";
  attribute IOB of iDA6  : label is "TRUE";
  attribute IOB of iDA7  : label is "TRUE";
  attribute IOB of iDA8  : label is "TRUE";
  attribute IOB of iDA9  : label is "TRUE";
  attribute IOB of iDA10 : label is "TRUE";
  attribute IOB of iDA11 : label is "TRUE";
  attribute IOB of iDA12 : label is "TRUE";
  attribute IOB of iDA13 : label is "TRUE";

  signal nSCLK : std_logic;
  signal DATAd : std_logic_vector(13 downto 0);

begin

  nSCLK <= NOT SCLK;

  WRT <= nSCLK;  -- OBUF_F_8  (instanciation in the top level)
  CLK <= nSCLK;  -- OBUF_F_12 (instanciation in the top level)

  DATAd <= DATA after 1 ns;

  -- Instanciate these flip-flops to ensure they will always be OFDs
  iDA0  : FD port map (DAC(0),  D=>DATAd(0),  C=>SCLK);  -- IOB
  iDA1  : FD port map (DAC(1),  D=>DATAd(1),  C=>SCLK);  -- IOB
  iDA2  : FD port map (DAC(2),  D=>DATAd(2),  C=>SCLK);  -- IOB
  iDA3  : FD port map (DAC(3),  D=>DATAd(3),  C=>SCLK);  -- IOB
  iDA4  : FD port map (DAC(4),  D=>DATAd(4),  C=>SCLK);  -- IOB
  iDA5  : FD port map (DAC(5),  D=>DATAd(5),  C=>SCLK);  -- IOB
  iDA6  : FD port map (DAC(6),  D=>DATAd(6),  C=>SCLK);  -- IOB
  iDA7  : FD port map (DAC(7),  D=>DATAd(7),  C=>SCLK);  -- IOB
  iDA8  : FD port map (DAC(8),  D=>DATAd(8),  C=>SCLK);  -- IOB
  iDA9  : FD port map (DAC(9),  D=>DATAd(9),  C=>SCLK);  -- IOB
  iDA10 : FD port map (DAC(10), D=>DATAd(10), C=>SCLK);  -- IOB
  iDA11 : FD port map (DAC(11), D=>DATAd(11), C=>SCLK);  -- IOB
  iDA12 : FD port map (DAC(12), D=>DATAd(12), C=>SCLK);  -- IOB
  iDA13 : FD port map (DAC(13), D=>DATAd(13), C=>SCLK);  -- IOB

end RTL;

