unit TxRxChWS;

interface

uses
  CommonObjs;

type
  ITxRxChWS = interface(IInvokable)
  ['{4CEDA6BD-6D98-EE7A-4EBF-F07F6854CEA0}']
    // ITxRxStatus
    function  Get_Tx_Caldeo: Boolean; stdcall;
    function  Get_Tx_Anodo: Boolean; stdcall;
    function  Get_Tx_Listo: Boolean; stdcall;
    function  Get_Tx_Averia: Boolean; stdcall;
    function  Get_Rx_Caldeo: Boolean; stdcall;
    function  Get_Rx_Anodo: Boolean; stdcall;
    function  Get_Rx_Averia: Boolean; stdcall;
    function  Get_Tx_Pulso: TxPulseEnum; stdcall;
    function  Get_TxRx_Ajuste: Boolean; stdcall;
    function  Get_Tx_Potencia: Integer; stdcall;
    function  Get_Rx_Sintonia: Integer; stdcall;
    function  Get_Rx_Ganancia: Integer; stdcall;
    function  Get_Rx_Ruido: Integer; stdcall;
    function  Get_Numero: Integer; stdcall;
    function  Get_Longitud_Onda: TWaveLengthEnum; stdcall;
    function  Get_Rx_Correccion: Boolean; stdcall;
    function  Get_Tx_Standby: Boolean; stdcall;
    function  Get_Tx_Potencia_Voltage: Single; stdcall;
    function  Get_Rx_Sintonia_Voltage: Single; stdcall;
    function  Get_Rx_Ganancia_Voltage: Single; stdcall;
    function  Get_Rx_Ruido_Voltage: Single; stdcall;
    // ITxRxControl
    procedure Tx_Encender; stdcall;
    procedure Tx_Apagar; stdcall;
    procedure Set_Tx_Standby(const value: Boolean); stdcall;
    procedure Rx_Encender; stdcall;
    procedure Rx_Apagar; stdcall;
    procedure Set_Rx_Correccion(const value: Boolean); stdcall;
    procedure Set_Trabajo(const value: Boolean); stdcall;

    property Tx_Caldeo: boolean read Get_Tx_Caldeo;
    property Tx_Anodo: boolean read Get_Tx_Anodo;
    property Tx_Listo: boolean read Get_Tx_Listo;
    property Tx_Averia: boolean read Get_Tx_Averia;
    property Rx_Caldeo: boolean read Get_Rx_Caldeo;
    property Rx_Anodo: boolean read Get_Rx_Anodo;
    property Rx_Averia: boolean read Get_Rx_Averia;
    property TxRx_Ajuste: boolean read Get_TxRx_Ajuste;
    property Tx_Potencia: Integer read Get_Tx_Potencia;
    property Rx_Sintonia: Integer read Get_Rx_Sintonia;
    property Rx_Ganancia: Integer read Get_Rx_Ganancia;
    property Rx_Ruido: Integer read Get_Rx_Ruido;
    property Numero: Integer read Get_Numero;
    property Rx_Correccion: boolean read Get_Rx_Correccion write Set_Rx_Correccion;
    property Tx_Standby: boolean read Get_Tx_Standby write Set_Tx_Standby;
    property Tx_Potencia_Voltage: Single read Get_Tx_Potencia_Voltage;
    property Rx_Sintonia_Voltage: Single read Get_Rx_Sintonia_Voltage;
    property Rx_Ganancia_Voltage: Single read Get_Rx_Ganancia_Voltage;
    property Rx_Ruido_Voltage: Single read Get_Rx_Ruido_Voltage;
    property Tx_Pulso: TxPulseEnum read Get_Tx_Pulso;
    property Longitud_Onda: TWaveLengthEnum read Get_Longitud_Onda;

    property Trabajo: boolean write Set_Trabajo;

    // ITxRxMRL5M
    function  Get_Rx_CMG: Boolean; stdcall;
    procedure Set_Rx_CMG(const Value: Boolean); stdcall;
    procedure Rx_Ganancia_N; stdcall;
    procedure Rx_Ganancia_P; stdcall;
    function  Get_Rx_CMS: Boolean; stdcall;
    procedure Set_Rx_CMS(const Value: Boolean); stdcall;
    procedure Rx_Sintonia_N; stdcall;
    procedure Rx_Sintonia_P; stdcall;

    property Rx_CMG: boolean read Get_Rx_CMG write Set_Rx_CMG;
    property Rx_CMS: boolean read Get_Rx_CMS write Set_Rx_CMS;

    //ITxRxMeasure
    function  Get_Rango_Tx_Potencia: Integer; stdcall;
    function  Get_Rango_Rx_Sintonia: Integer; stdcall;
    function  Get_Rango_Rx_Ganancia: Integer; stdcall;
    function  Get_Rango_Rx_Ruido: Integer; stdcall;
    function  Get_Sector_Tx_Potencia: Integer; stdcall;
    function  Get_Sector_Rx_Sintonia: Integer; stdcall;
    function  Get_Sector_Rx_Ganancia: Integer; stdcall;
    function  Get_Sector_Rx_Ruido: Integer; stdcall;
    //ITxRxMeasureControl
    procedure Set_Rango_Tx_Potencia(const value: Integer); stdcall;
    procedure Set_Rango_Rx_Sintonia(const value: Integer); stdcall;
    procedure Set_Rango_Rx_Ganancia(const value: Integer); stdcall;
    procedure Set_Rango_Rx_Ruido(const value: Integer); stdcall;
    procedure Set_Sector_Tx_Potencia(const value: Integer); stdcall;
    procedure Set_Sector_Rx_Sintonia(const value: Integer); stdcall;
    procedure Set_Sector_Rx_Ganancia(const value: Integer); stdcall;
    procedure Set_Sector_Rx_Ruido(const value: Integer); stdcall;

    property Rango_Tx_Potencia: Integer read Get_Rango_Tx_Potencia write Set_Rango_Tx_Potencia;
    property Rango_Rx_Sintonia: Integer read Get_Rango_Rx_Sintonia write Set_Rango_Rx_Sintonia;
    property Rango_Rx_Ganancia: Integer read Get_Rango_Rx_Ganancia write Set_Rango_Rx_Ganancia;
    property Rango_Rx_Ruido: Integer read Get_Rango_Rx_Ruido write Set_Rango_Rx_Ruido;
    property Sector_Tx_Potencia: Integer read Get_Sector_Tx_Potencia write Set_Sector_Tx_Potencia;
    property Sector_Rx_Sintonia: Integer read Get_Sector_Rx_Sintonia write Set_Sector_Rx_Sintonia;
    property Sector_Rx_Ganancia: Integer read Get_Sector_Rx_Ganancia write Set_Sector_Rx_Ganancia;
    property Sector_Rx_Ruido: Integer read Get_Sector_Rx_Ruido write Set_Sector_Rx_Ruido;
  end;

implementation

end.
